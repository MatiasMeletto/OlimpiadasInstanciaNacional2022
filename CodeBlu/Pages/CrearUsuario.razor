@inject NavigationManager navigationManager
@inject IDbContextFactory<CodeBluingDbContext> DbFactory
@page "/crearUsuario"

<div id="layoutAuthentication">
    <div id="layoutAuthentication_content">
        <main>
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-lg-7">
                        <div class="card shadow-lg border-0 rounded-lg mt-5">
                            <div class="card-header"><h3 class="text-center font-weight-light my-4">Crear usuario y enfermero/a</h3></div>
                            <div class="card-body">
                                <form>
                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <div class="form-floating mb-3 mb-md-0">
                                                <input class="form-control" id="inputFirstName" type="text" @bind="personal.Nombre" />
                                                <label for="inputFirstName">Nombre</label>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-floating">
                                                <input class="form-control" id="inputLastName" type="text" @bind="personal.Apellido" />
                                                <label for="inputLastName">Apellido</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-floating mb-3">
                                        <input class="form-control" id="inputEmail" type="text" @bind="personal.DNI" />
                                        <label for="inputEmail">DNI</label>
                                    </div>
                                    <div class="form-floating mb-3">
                                        <input class="form-control" id="inputEmail" type="text" @bind="personal.Usuario" />
                                        <label for="inputEmail">Nombre de usuario</label>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <div class="form-floating mb-3 mb-md-0">
                                                <input class="form-control" id="inputPassword" type="password" @bind="personal.Contrasena" />
                                                <label for="inputPassword">Contraseña</label>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-floating mb-3 mb-md-0">
                                                <input class="form-control" id="inputPasswordConfirm" type="password" @bind="personal.ContrasenaConfirm" />
                                                <label for="inputPasswordConfirm">Confirmar Contr.</label>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    @*if necesario para evitar crasheos*@
                                    @if (zonas is not null)
                                    {
                                        <div class="row mb-3">
                                            <div class="col-md-12">
                                                <label for="selector1"> Zona: </label>
                                                <select id="selector1" @bind="personal.ZonaId">
                                                    <option selected value="0">-Seleccione una zona-</option>
                                                    @foreach (Zona z in zonas)
                                                    {
                                                        <option value="@z.ZonaId">@z.Nombre</option>
                                                    }
                                                </select>

                                            </div>
                                        </div>
                                    }
                                    <div class="row mb-3">
                                        <div class="col-md-12">
                                            <label for="selector1"> Rol: </label>
                                            <select id="selector1" @bind="personal.Rol">
                                                <option selected value="@TipoRol.Otro">-Seleccione un rol-</option>
                                                <option value="@TipoRol.Generico">Generico</option>
                                                <option value="@TipoRol.Administrador">Administrador</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="mt-4 mb-0">
                                        <div class="d-grid"><a class="btn btn-primary btn-block" @onclick="CrearUsuarioYPersonal">Crear</a></div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>
    <div class="row justify-content-center">
        <label>*Recuerde que para crear un usuario es necesario que existan zonas*</label>
    </div>
</div>

@code {
    public class PersonalMedicoViewModel
    {
        //ViewModel que "unifica" usuario y personalMedico
        [Required, StringLength(255)]
        public string Nombre { get; set; }
        [Required, StringLength(255)]
        public string Apellido { get; set; }
        [Required, StringLength(255)]
        public string DNI { get; set; }
        [Required, StringLength(255)]
        public string Contrasena { get; set; }
        [Required, StringLength(255)]
        public string ContrasenaConfirm { get; set; }
        [Required, StringLength(255)]
        public string Usuario { get; set; }
        public TipoRol Rol { get; set; }
        public int ZonaId { get; set; }
    }

    //declaro un nuevo viewModel que va a ser para la carga de datos y un array de zonas que se va a mostrar en vistas
    private PersonalMedicoViewModel personal { get; set; } = new();
    private Zona[]? zonas { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var db = await DbFactory.CreateDbContextAsync();

        //trae todas las zonas de la base de datos
        zonas = await db.Zonas.ToArrayAsync();
    }

    public async void CrearUsuarioYPersonal()
    {
        //este if controla que no haya nada vacio
        if (personal.ZonaId != 0 && !string.IsNullOrWhiteSpace(personal.Apellido) && !string.IsNullOrWhiteSpace(personal.Nombre) && !string.IsNullOrWhiteSpace(personal.Contrasena) && !string.IsNullOrWhiteSpace(personal.ContrasenaConfirm) && !string.IsNullOrWhiteSpace(personal.DNI) && !string.IsNullOrWhiteSpace(personal.Usuario) && personal.Rol != 0)
        {
            using var db = await DbFactory.CreateDbContextAsync();

            //compruebo que no exista personal con ese usuario o con ese dni
            PersonalMedico? comprobante1 = await db.Personal.Where(p => p.DNI == personal.DNI).SingleOrDefaultAsync();
            User? comprobante2 = await db.Usuarios.Where(u => u.Usuario == personal.Usuario).SingleOrDefaultAsync();

            //en caso de que no exista y las contraseñas coincidan 
            if (personal.Contrasena == personal.ContrasenaConfirm && comprobante1 is null && comprobante2 is null)
            {
                //creo un medico y un usuario con lo que saque del personalViewMovil
                PersonalMedico p = new()
                {
                    Apellido = personal.Apellido,
                    Nombre = personal.Nombre,
                    DNI = personal.DNI,
                    ZonaId = personal.ZonaId,
                };

                User u = new()
                {
                    Contrasena = personal.Contrasena,
                    Usuario = personal.Usuario,
                    DNI = personal.DNI,
                    Rol = personal.Rol
                };

                //los añade a la base de datos y guarda los cambios
                await db.Personal.AddAsync(p);
                await db.Usuarios.AddAsync(u);
                await db.SaveChangesAsync();

                //reinicia el viewModel
                personal = new();
                StateHasChanged();
            }
        }
    }
}
