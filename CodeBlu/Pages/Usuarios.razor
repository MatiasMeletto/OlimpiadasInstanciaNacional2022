@inject NavigationManager navigationManager
@inject IDbContextFactory<CodeBluingDbContext> DbFactory
@page "/usuarios"

<div class="container-fluid">
<h1 class="text-lg-center">Usuarios Activos</h1>
<br>
<br>
@if(usuarios is not null)
{
    @if(usuarios.Any())
    {
        <table style="margin: 0 auto;" id="tabla1">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>DNI</th>
                    <th>Nombre usuario</th>
                    <th>Zona asignada</th>
                    <th>Rol</th>
                </tr>
            </thead>
            <tbody>

                @foreach (PersonalMedicoViewModel u in usuarios)
                {
                    <tr>
                        <td>@u.Nombre</td>
                        <td>@u.Apellido</td>
                        <td>@u.DNI</td>
                        <td>@u.Usuario</td>
                        <td>@u.ZonaNombre</td>
                        <td>@u.Rol</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <h3 class="text-center">Cargando...</h3>
    }
}
else
{
    <h3 class="text-center">No hay usuarios</h3>
}
</div>
@code {
    public class PersonalMedicoViewModel
    {
        [Required, StringLength(255)]
        public string Nombre { get; set; }
        [Required, StringLength(255)]
        public string Apellido { get; set; }
        [Required, StringLength(255)]
        public string DNI { get; set; }
        [Required, StringLength(255)]
        public string Contrasena { get; set; }
        [Required, StringLength(255)]
        public string Usuario { get; set; }
        public TipoRol Rol { get; set; }
        public int ZonaId { get; set; }
        public string ZonaNombre { get; set; }
    }
    public List<PersonalMedicoViewModel> usuarios = new();
    public User[]? users;
    public PersonalMedico[]? personal;

    protected override async Task OnInitializedAsync()
    {
        using var db = await DbFactory.CreateDbContextAsync();

        users = await db.Usuarios.ToArrayAsync();
        personal = await db.Personal.ToArrayAsync();

        foreach (User u in users)
        {
            PersonalMedico? pm = await db.Personal.Include(p => p.Zona).Where(p => p.DNI == u.DNI).SingleOrDefaultAsync();

            if (pm is not null)
            {

                PersonalMedicoViewModel p = new()
                {
                    Apellido = pm.Apellido,
                    Contrasena = u.Contrasena,
                    Usuario = u.Usuario,
                    Nombre = pm.Nombre,
                    DNI = pm.DNI,
                    ZonaId = pm.ZonaId,
                    ZonaNombre = pm.Zona.Nombre,
                    Rol = u.Rol
                };

                usuarios.Add(p);
            }
            else
            {
                break;
            }
        }
    }
}