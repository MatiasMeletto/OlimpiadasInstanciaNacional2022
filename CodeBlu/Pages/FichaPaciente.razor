@inject NavigationManager navigationManager
@inject IDbContextFactory<CodeBluingDbContext> DbFactory
@page "/fichaPaciente"

<h1 class="text-lg-center">Fichas de pacientes</h1>
    <br>
    
<div class="row container">
    <h4 >Crear ficha de paciente</h4>
    <br>
    <br>
    <br>
    <div class="col-4">
    <h6 >Datos</h6>

    <label >Nombre:</label>
    <br>
    <input  type="text"  @bind="paciente.Nombre"/>
    <br>
    <label >Apellido:</label>
        <br>
        <input type="text"  @bind="paciente.Apellido" />
    <br>
    <label >DNI:</label>
    <br>
    <input  type="text" @bind="paciente.DNI" />
    <br>
    <label >Tipo de sangre:</label>
        <br>
    <input  type="text" @bind="paciente.TipoSangre" />
    <br>
    <label >Contacto de emergencia:</label>
        <br>
    <input  type="text" @bind="paciente.ContactoEmergencia"  />
    <br>
    <label >Fecha de nacimiento:</label>
        <br>
    <input  type="datetime"  @bind="paciente.FechaNacimiento" />
    <br>
    <label >Edad:</label>
        <br>
    <input  type="number"  @bind="paciente.Edad" />
    <br>
    <br>
    </div>
    <div class="col-lg-4">
    <h6 id="TituloF">Antecedentes</h6>
    <label >Asma:</label>
    <input  type="checkbox"  @bind="paciente.Asma" />
        <br>
    <label >Varicela:</label>
    <input  type="checkbox"  @bind="paciente.TuvoVaricela" />
    <br>
    <label >Alergia:</label>
    <input  type="checkbox"  @bind="paciente.Alergia" />
        <br>
        @if(paciente.Alergia)
        {
            <label>Detalle alergia:</label>
            <input type="text" @bind="paciente.DetalleAlergia" />
            <br>
        }
    <label >Medicacion:</label>
    <input  type="checkbox" @bind="paciente.TomaMedicacion"/>
        <br>
        @if (paciente.TomaMedicacion)
        {
            <label>Detalle medicacion:</label>
            <input type="text"  @bind="paciente.DetalleMedicacion"/>
            <br>
        }
    <br>
</div>
    <div class="col-lg-4">
    <h6 id="TituloF">Datos de ingreso</h6>

    <label >Obra social:</label>
        <br>
    <input  type="text"  @bind="paciente.ObraSocial"/>
    <br>
    <label >N° de afiliado:</label>
        <br>
    <input  type="text"  @bind="paciente.NAfilidado"/>
    <br>
    <label >Medico de cabecera:</label>
        <br>
    <input  type="text"  @bind="paciente.MedicoCabecera"/>
    <br>
    <label >Diagnostico de ingreso:</label>
        <br>
    <input  type="text"  @bind="paciente.DiagnosticoIngreso"/>
    <br>
    <label >Patologia base:</label>
        <br>
    <input  type="text"  @bind="paciente.PatologiaBase"/>
    <br>
    <br>
    @if (zonas is not null)
    {
        <div class="row mb-3">
            <div class="col-md-12">
                <label for="selector1"> Zona: </label>
                <select id="selector1" @bind="paciente.ZonaId">
                    <option selected value="0">-Seleccione una zona-</option>
                    @foreach (Zona z in zonas)
                    {
                        <option value="@z.ZonaId">@z.Nombre</option>
                    }
                </select>

            </div>
        </div>

    }
    <br>
    <br>
    @if (personal is not null)
    {
        <div class="row mb-3">
            <div class="col-md-12">
                <label for="selector1"> Personal a cargo: </label>
                <select id="selector1" @bind="paciente.ZonaId">
                    <option selected value="0">-Seleccione un enfermero/a-</option>
                    @foreach (PersonalMedico p in personal)
                    {
                        <option value="@p.PersonalMedicoId">@p.Nombre  @p.Apellido</option>
                    }
                </select>

            </div>
        </div>

    }
    <button @onclick=""></button>
    </div>
    </div>
                
@code {
    public class PacienteViewModel
    {
        [Required, StringLength(255)]
        public string Nombre { get; set; }
        [Required, StringLength(255)]
        public string Apellido { get; set; }
        [Required, StringLength(255)]
        public string DNI { get; set; }
        [Required, StringLength(255)]
        public string ContactoEmergencia{ get; set; }
        public DateTime FechaNacimiento { get; set; } 
        public int Edad { get; set; }
        public bool Asma { get; set; }
        public bool TuvoVaricela { get; set; } 
        [Required, StringLength(45)]
        public string TipoSangre { get; set; }
        [Required, StringLength(255)]
        public string ObraSocial { get; set; }
        [Required, StringLength(255)]
        public string NAfilidado { get; set; }
        [Required, StringLength(255)]
        public string MedicoCabecera { get; set; }
        [Required, StringLength(255)]
        public string DiagnosticoIngreso { get; set; }
        public bool Alergia { get; set; } 
        [StringLength(255)]
        public string? DetalleAlergia { get; set; }
        [Required, StringLength(255)]
        public string PatologiaBase { get; set; }
        public bool TomaMedicacion { get; set; } 
        public string? DetalleMedicacion { get; set; }
        public int ZonaId { get; set; }
        public int PersonalMedicoId { get; set; }
    }

    public PacienteViewModel paciente { get; set; } = new();
    public PersonalMedico[]? personal { get; set; }
    private Zona[]? zonas { get; set; }

    protected override async Task OnInitializedAsync()
    {
        paciente.Alergia = false;
        paciente.TomaMedicacion = false;

        using var db = await DbFactory.CreateDbContextAsync();

        zonas = await db.Zonas.ToArrayAsync();
        personal = await db.Personal.ToArrayAsync();
    }
    
    public async void SubirPaciente()
    {

    }
}
